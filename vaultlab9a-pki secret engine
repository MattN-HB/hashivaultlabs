#challenge1
consul members
vault status
consul license get
vault read sys/license

#create vault intermediate ca
#enable pki engine
vault secrets enable pki
#tune
vault secrets tune -max-lease-ttl=43800h pki

#generate signing request
vault write -format=json pki/intermediate/generate/internal \
      common_name="example.com Intermediate Authority" \
      | jq -r '.data.csr' > pki_intermediate.csr

#switch vault config
vault/lab_pki/scripts/ca_config.sh

#load cert into vault
vault write pki/intermediate/set-signed certificate=@intermediate.cert.pem

#create pki role
vault write pki/roles/example-dot-com \
allowed_domains="example.com" \
allow_subdomains=true \
max_ttl="720h" \
enforce_hostnames=false

#writing to endpoint
vault write pki/issue/example-dot-com common_name="test.example.com" ttl="24h"

#challenge 3 create cert requestor role
vault policy write finance-ap-app-cert vault/lab_pki/policy/finance-ap-app-cert.hcl

#write policy
vault write auth/kubernetes/role/finance-ap-app \
  bound_service_account_names=ap-app \
  bound_service_account_namespaces=finance \
  policies=finance-ap-app-cert,finance-ap-app-read \
  ttl=24h

###Go back to the Config Files tab and navigate to the policy folder again. If you look at the vault agent template in finance-ap-app-agent-config.hcl you can see that the first template stanza is for the standard KV secret used from before. There are three stanzas commented out.

Uncomment the three template stanzas (starting at the opening curly brace lines and ending at the closing curly brace lines of each template block).

#adding agent confil to kube cluster

kubectl --namespace=finance create configmap vault-agent-configs --from-file=vault/lab_pki/policy/finance-ap-app-agent-config.hcl

#create deploy yml
kubectl -n finance apply -f vault/lab_pki/deployment/pki-finance-ap-app-pod.yml

#watch it
kubectl -n finance get pods -w

#connect to nginx
kubectl -n finance exec -it pki-finance-ap-app --container nginx-container /bin/bash
cd /etc/tls/vault
ls
#read one crt
cat safe.crt

